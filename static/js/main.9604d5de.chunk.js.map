{"version":3,"sources":["Config/Firebase.js","Config/AuthProvider.js","Chat-up/Chatroom.js","Chat-up/Chat.js","Chat-up/Statuspiece.js","Chat-up/Status.js","Chat-up/Signout.js","Chat-up/SimpleTabs.js","Chat-up/Signup.js","Chat-up/Forgotpassword.js","Chat-up/Signin.js","Chat-up/Animation.js","Chat-up/MainRoute.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","storage","database","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","passwordreset","sendPasswordResetEmail","updatePassword","updateEmail","Logout","signOut","anonymous","signInAnonymously","Provider","makeStyles","para1","background","color","maxWidth","padding","borderRadius","para2","left","display","justifyContent","right","card","width","flow","overflow","margin","position","bottom","ref","marginTop","Chat","Statuspiece","Status","Signout","props","history","useHistory","error","setError","signout","a","push","IconButton","edge","onClick","theme","root","flexGrow","backgroundColor","palette","paper","status","flexDirection","alignItems","chats","useStyles","center","Signup","classes","button","setButton","eye","setEye","eye1","setEye1","eyer","eyer1","formik","useFormik","initialValues","passwordconfig","validationSchema","Yup","required","onSubmit","values","className","Card","handleSubmit","Typography","Alert","severity","Grid","container","item","xs","style","fontSize","Input","label","name","onBlur","handleBlur","variant","onChange","handleChange","touched","errors","type","endAdornment","Button","disabled","to","Forgotpassword","message","setMessage","TextField","Signin","eyes","setEyes","e","InputAdornment","size","Animation","MainRoute","exact","path","component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.9604d5de.chunk.js","sourcesContent":["import React from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport 'firebase/auth';\r\nimport \"firebase/storage\";\r\nimport \"firebase/database\";\r\n\r\n    // For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst config = {\r\n  apiKey: \"AIzaSyBRXU_CxKhYCDwdN5UlQDWBkEDa9vggM8E\",\r\n  authDomain: \"lewek-b57c3.firebaseapp.com\",\r\n  projectId: \"lewek-b57c3\",\r\n  storageBucket: \"lewek-b57c3.appspot.com\",\r\n  messagingSenderId: \"661612329725\",\r\n  appId: \"1:661612329725:web:b4205de10ded3ad3d2dc94\"\r\n  };\r\n\r\n\r\nconst app = firebase.initializeApp(config);\r\nexport const auth = app.auth();\r\nexport const storage = app.storage();\r\nexport const database = app.database();\r\nexport {  app as default};\r\n","import React, { useContext ,useState ,useEffect} from 'react';\r\nimport { auth } from './Firebase';\r\n\r\n\r\nconst AuthContext = React.createContext();\r\n\r\n//usecontext function\r\nexport const useAuth = () =>{\r\n    return useContext(AuthContext);\r\n} \r\n\r\nexport function AuthProvider({children}) {\r\n    const [currentUser,setCurrentUser] = useState('');\r\n    const [loading,setLoading] = useState(true);\r\n\r\n    // on mount see if there is a currently signed in user if yes setcurrentuser to true and loading to false\r\n    useEffect (()=>{\r\n    const aut = auth.onAuthStateChanged(user => {\r\n        setCurrentUser(user);\r\n        setLoading(false);\r\n    })\r\n\r\n    return aut},\r\n    [])\r\n\r\n    \r\n    function signup (email,password){\r\n        return  auth.createUserWithEmailAndPassword(email,password);\r\n    }\r\n\r\n    const login =(email,password) => auth.signInWithEmailAndPassword(email,password);\r\n    const passwordreset =(email) => auth.sendPasswordResetEmail(email);\r\n    const updatePassword =(password) => currentUser.updatePassword(password);\r\n    const updateEmail =(email) => currentUser.updateEmail(email);\r\n    const anonymous =()=> auth.signInAnonymously();\r\n    const Logout=()=>{\r\n        return auth.signOut()\r\n    }\r\n\r\n    const value ={\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        passwordreset,\r\n        updatePassword,\r\n        updateEmail,\r\n        Logout,\r\n        anonymous\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport { ChatSharp } from '@material-ui/icons';\r\nimport { useAuth } from \"../Config/AuthProvider\";\r\nimport Tippy  from  \"@tippyjs/react\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { database } from '../Config/Firebase';\r\nconst useStyles = makeStyles({\r\n    para1:{\r\n        background:'blue',\r\n        color:'white',\r\n        maxWidth:'350px',\r\n        padding:'10px',\r\n        borderRadius:'18px'\r\n    },\r\n    para2:{\r\n        background:'magenta',\r\n        color:'white',\r\n        maxWidth:'350px',\r\n        padding:'10px',\r\n        borderRadius:'18px'\r\n    },\r\n    left:{\r\n        display:'flex',\r\n        justifyContent:'flex-start',\r\n    },\r\n    right:{\r\n        display:'flex',\r\n        justifyContent:'flex-end',\r\n    }\r\n})\r\n\r\n\r\n\r\nfunction Chatroom({chat}) {\r\n    const classes = useStyles();\r\n    const { currentUser } =useAuth();\r\n   \r\n    var username =currentUser.email;\r\n    var avat = username[0];       \r\n    \r\n    return (\r\n        <div className={chat.name  == currentUser.email ? classes.right : classes.left}>\r\n            <Avatar alt={chat.name[0]}  style={{textTransform:'capitalize',fontSize:'14px', width:'30px',height:'30px'}} /><h5 className={chat.name  == currentUser.email  ? classes.para2 : classes.para1 }>{chat.text} </h5>\r\n        </div>\r\n        \r\n        \r\n        \r\n    );\r\n}\r\n\r\nexport default Chatroom;","import React, { useRef, useState ,useEffect } from 'react';\r\nimport {Card, CardContent ,TextField ,Button, CardActions } from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport Chatroom from \"./Chatroom\";\r\nimport {database} from \"../Config/Firebase\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport {useAuth} from \"../Config/AuthProvider\";\r\n\r\nconst useStyles = makeStyles({\r\n   \r\n    card:{\r\n        width:'450px',\r\n        maxWidth:'450px',\r\n        \r\n        \r\n    },\r\n    flow:{\r\n        overflow:'auto',\r\n        margin:'15px'\r\n    },\r\n    position:{\r\n        position:'fixed',\r\n        bottom:'30px',\r\n        \r\n    },\r\n    ref:{\r\n        marginTop:'150px',\r\n    }\r\n})\r\nfunction Chat(props) {\r\n    const classes = useStyles();\r\n    const divref =useRef();\r\n    const {currentUser} =useAuth();\r\n    const [value ,setValue] =useState('');\r\n    const [chat,setChat]=useState(new Array());\r\n    const submitter = (e)=>{\r\n        e.preventDefault();\r\n        if(value){\r\n            database.ref('chats').push({\r\n                text:value,\r\n                id:uuidv4(),\r\n                name:currentUser.email,\r\n            \r\n            });\r\n            divref.current.scrollIntoView(true);\r\n            setValue('');\r\n\r\n        }\r\n       \r\n        \r\n        \r\n    }\r\n    // useEffect((e)=>{\r\n    //     database.ref('chats').on('value',(snapshot)=>{\r\n    //         let arr =[];\r\n    //         snapshot.forEach((snap)=>{\r\n    //             arr.push(snap.val())\r\n    //             setChat(arr);\r\n    //         })\r\n    //     })\r\n    //     divref.current.scrollIntoView(true);\r\n    // },[value])\r\n\r\n\r\n    useEffect((e)=>{\r\n       database.ref('chats').on('value',(snapshot)=>{\r\n            let arr =[];\r\n            snapshot.forEach((snap)=>{\r\n                arr.push(snap.val())\r\n                setChat(arr);\r\n            })\r\n        })\r\n        divref.current.scrollIntoView(true);\r\n    },[])\r\n    \r\n    const changer =(e)=>{\r\n        e.preventDefault();\r\n        setValue(e.target.value)\r\n    }\r\n    return (\r\n        <>\r\n          <Card className={classes.card}>\r\n            <CardContent className={classes.flow}>\r\n              {chat && chat.map((chat) => {\r\n                  return (\r\n                      <Chatroom key ={chat.id} chat={chat}/>\r\n                  )\r\n              })}    \r\n                 <div className={classes.ref} ref ={divref}/>\r\n\r\n              <form onSubmit={submitter} className={classes.position}>\r\n                  <TextField textColor='white' value={value} label='send msg'  onChange={changer} color='secondary'/>\r\n                  <Button onClick={submitter} variant='outlined' fontSize='small' color='secondary'> <SendIcon /> </Button>\r\n              </form>     \r\n            </CardContent>  \r\n           \r\n          </Card>  \r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Chat;","import React, { useEffect, useState } from 'react';\r\nimport {Card ,CardContent,CardActions,CardHeader,Avatar ,IconButton} from \"@material-ui/core\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport {FormControlLabel ,Badge ,Checkbox} from \"@material-ui/core\";\r\nimport { database } from '../Config/Firebase';\r\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\r\nimport { useAuth } from \"../Config/AuthProvider\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\n\r\n\r\n\r\nfunction Statuspiece({item}) {\r\n    const [value,setValue] =useState();\r\n    const { currentUser }=useAuth();\r\n    \r\n        var email =currentUser.email;\r\n        var index= email.indexOf('@');\r\n        var name = email.slice(0,index);\r\n\r\n        \r\n    \r\n    useEffect((e)=>{\r\n       \r\n        //  const likes = database.ref(`status/${name}`).on('value',(snapshot)=>{\r\n        //      setValue(snapshot.val().likeState);\r\n        //  });\r\n         \r\n           \r\n           \r\n    },[])\r\n    console.log(name);\r\n    \r\n    const handleChange=async (e)=>{\r\n        // await database.ref(`status/${name}`).update({\r\n        //     likeState:!value,\r\n        // })\r\n        \r\n        if (value === true){\r\n            //database.ref('status').child(name).child('numberOfLikes').transaction((likes)=>likes + 1);\r\n\r\n        }\r\n        else{\r\n            //database.ref('status').child(name).child('numberOfLikes').transaction((likes)=>likes - 1);\r\n            \r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n             <Card style={{margin:'40px'}}>\r\n                    <CardHeader avatar={<Avatar src={item.imgs} />} title={item.name}/>\r\n                    <CardContent>\r\n                        <img style={{width:'400px',height:'250px'}} src={item.imgs} alt='user pics'/>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        \r\n                           <FormControlLabel control={<Badge color='primary' badgeContent={item.numberOfLikes}><Checkbox icon={<ThumbUpAltOutlinedIcon color='primary' />} value={value} onChange={handleChange} checkedIcon={<ThumbUpIcon color='primary'/>} /></Badge>} />\r\n                        \r\n                    </CardActions>\r\n                </Card>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Statuspiece;","import { CardHeader } from '@material-ui/core';\r\nimport React,{useState ,useEffect} from 'react';\r\nimport blue from \"../image/blue.jpg\";\r\nimport blue1 from \"../image/blue1.jpg\";\r\nimport dark1 from \"../image/dark1.jpg\";\r\nimport Statuspiece from \"./Statuspiece\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport { storage ,database} from '../Config/Firebase';\r\nimport { useAuth } from \"../Config/AuthProvider\";\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nimport { v4 as uuidv4} from \"uuid\";\r\nfunction Status(props) {\r\n    const [card,setCard] = useState([{name:'victor',imgs:blue,id:1,numberOfLikes:5},{name:'daniel',id:2, imgs:blue1,numberOfLikes:10},{name:'rose',id:3,imgs:dark1,numberOfLikes:52}]);\r\n     const [file,setFile]=useState('');\r\n     const [pix,setPix]=useState('');\r\n     const { currentUser } =useAuth();\r\n\r\n\r\n     var email = currentUser.email\r\n     var index = email.indexOf('@');\r\n     var name =email.slice(0,index);\r\n     \r\n    \r\n     const changer= async (e)=>{\r\n         if(e.target.files[0]){\r\n             setFile(e.target.files[0]);  \r\n             if(storage.ref('statusImage').child(currentUser.email) !== null){\r\n                await storage.ref('statusImage').child(currentUser.email).delete();\r\n             }                                      \r\n             \r\n             const drop = storage.ref('statusImage').child(currentUser.email);\r\n             const put =drop.put(file);\r\n             put.on('state_changed',()=>{},()=>{},\r\n             async (complete)=>{\r\n                \r\n                await storage.ref('statusImage').child(currentUser.email).getDownloadURL().then((imageurl)=>setPix(imageurl));\r\n                if(database.ref(`status/${name}`) !== null){\r\n\r\n                    await  database.ref(`status/${name}`).remove();\r\n                }\r\n                await  database.ref(`status/${name}`).set({\r\n                    id:uuidv4(),\r\n                    imgs:pix,\r\n                    name:name,\r\n                    likeState:false,\r\n                    numberOfLikes:0,\r\n                })\r\n\r\n               \r\n             })\r\n         }\r\n       else{\r\n           alert('no file was chosen!!!')\r\n       }\r\n     }\r\n\r\n     useEffect((e)=>{\r\n            database.ref('status').on('value',(snapshot)=>{\r\n                const arr =[];\r\n                snapshot.forEach((snap)=>{\r\n                    arr.push(snap.val())\r\n                    setCard([arr,...card]);\r\n                   })\r\n            })\r\n        \r\n        \r\n       \r\n     },[])\r\n    return (\r\n        <>\r\n            <div style={{position:'fixed',left:'10px'}}>\r\n                <input style={{display:'none'}}  type='file' id ='upload' accept='image/' />\r\n               <IconButton > <label htmlFor='upload'> <AddAPhotoIcon color='primary'/> </label> </IconButton>\r\n            </div> \r\n            {card.map((item)=>(\r\n                     <Statuspiece key={item.id} item={item}/>\r\n                )\r\n            )}\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Status; ","import React, { useState } from 'react';\r\nimport {Button } from \"@material-ui/core\";\r\nimport {useAuth} from \"../Config/AuthProvider\";\r\nimport {auth } from \"../Config/AuthProvider\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nfunction Signout(props) {\r\n    const {Logout} =useAuth();\r\n    const history =useHistory();\r\n    const [error,setError]= useState('')\r\n    const signout = async ()=>{\r\n        try{\r\n           await Logout();\r\n           history.push('/')\r\n\r\n\r\n        }catch{\r\n           setError('failed to log out')\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {error ? <div>{error}</div> : ''}\r\n            <IconButton edge=\"end\" onClick={signout}>\r\n               <ExitToAppIcon />\r\n            </IconButton>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Signout;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport {Toolbar ,Grid} from \"@material-ui/core\";\r\nimport Chat from \"./Chat\";\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport Status from \"./Status\";\r\nimport { useAuth } from \"../Config/AuthProvider\";\r\n//import {AuthProvider} from \"../Config/AuthProvider\";\r\nimport Signout from \"./Signout\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Upload from './Upload';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n   \r\n    return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n\r\n  status:{\r\n    display:'flex',\r\n    flexDirection:'row',\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    marginTop:'50px'\r\n  },\r\n  chats:{\r\n    display:'flex',\r\n    flexDirection:'row',\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    \r\n  }\r\n}));\r\n\r\nexport default function SimpleTabs() {\r\n  const classes = useStyles();\r\n  const { currentUser } = useAuth();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\">\r\n          <Toolbar>\r\n            <Typography>Futo Social Forum</Typography>\r\n          \r\n            <Tabs indicatorColor='white' value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                {/*<Tab  icon={<HomeIcon />} {...a11yProps(0)} /> */}  \r\n                <Tab  icon={<ChatBubbleIcon />}  {...a11yProps(1)} />\r\n            </Tabs>\r\n            <Upload />\r\n            <Signout/> \r\n          </Toolbar>\r\n        \r\n      </AppBar>\r\n     {/* <TabPanel className={classes.status} value={value} index={0}>\r\n          <Status />\r\n     </TabPanel>*/}\r\n      <TabPanel value={value} className={classes.chats} index={0}>\r\n          <Chat /> \r\n        \r\n      </TabPanel>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Grid , Button ,Card ,Paper ,TextField, CardMedia, CardContent ,} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport blue from \"../image/blue.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\n//import {signup} from \"../Config/AuthProvider\";\r\nimport {useAuth }from \"../Config/AuthProvider\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Upload from \"./Upload\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    center:{\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n    }\r\n})\r\nfunction Signup(props) {\r\n    const classes =useStyles();\r\n    const [error,setError]=useState('');\r\n    const [button,setButton]=useState(false);\r\n    const history =useHistory();\r\n    const {signup} =useAuth();\r\n    const [eye,setEye] =useState(true);\r\n    const [eye1,setEye1] =useState(true);\r\n\r\n    const eyer =()=>{\r\n        setEye(!eye);\r\n    }\r\n\r\n    const eyer1 =()=>{\r\n        setEye1(!eye1);\r\n    }\r\n    const formik =useFormik({\r\n        initialValues:{\r\n        email:'',\r\n        password:'',\r\n        passwordconfig:''\r\n        },\r\n        validationSchema:Yup.object({\r\n            email:Yup.string().email('invalid email type').required('email is required'),\r\n            password:Yup.string().required('password is required'),\r\n            passwordconfig:Yup.string().required('required')\r\n        }),\r\n\r\n       onSubmit :async (values)=>{\r\n           if (formik.values.password !== formik.values.passwordconfig){\r\n               return setError('passwords do not match');\r\n           }\r\n           try{\r\n              setError('');\r\n              setButton(true);\r\n              await signup(formik.values.email,formik.values.password);\r\n              history.push('/')\r\n           }\r\n           catch{\r\n               setError('failed to sign up')\r\n           }\r\n           setButton(false);\r\n       }\r\n    })\r\n    return (\r\n        <div className={classes.center}>\r\n            \r\n            <Card>\r\n            \r\n               <form onSubmit={formik.handleSubmit}>\r\n                   <Typography>Sign up </Typography>\r\n                   {error ?<Alert severity=\"error\">{error}</Alert> :''}\r\n               <Grid container>   \r\n                    <Grid item xs={2}> <label style={{fontSize:'18px'}}> Email:</label> </Grid>\r\n                            <Grid item xs={10}>\r\n                                <Input label='email' name='email' onBlur={formik.handleBlur} style={{margin:'20px'}} variant='outlined' color='primary' value={formik.values.email} onChange={formik.handleChange} />\r\n                                {formik.touched.email && formik.errors.email ?<Alert severity=\"error\">{formik.errors.email}</Alert>:''}\r\n                            </Grid>\r\n                        \r\n                        <Grid item xs={2}> <label style={{fontSize:'18px'}}> password: </label></Grid>\r\n                            <Grid item xs={10}>\r\n                                    <Input name='password' label='password' type={eye ? 'password' :'text'} endAdornment={eye ? <VisibilityIcon onClick={eyer} /> : <VisibilityOffIcon onClick={eyer} />} onBlur={formik.handleBlur} variant='outlined' style={{margin:'20px'}} color='primary' value={formik.values.password} onChange={formik.handleChange} />\r\n                                     {formik.touched.password && formik.errors.password ? <Alert severity=\"error\">{formik.errors.password}</Alert>:''}\r\n                                </Grid>\r\n                         \r\n                        <Grid item xs={2}><label style={{fontSize:'18px'}}>\r\n                                password-confirm:</label>\r\n                            </Grid>\r\n                            <Grid item xs={10}>\r\n                                <Input label='password-confirm' type={eye1 ? 'password' :'text'} endAdornment={eye1 ? <VisibilityIcon onClick={eyer1} /> : <VisibilityOffIcon onClick={eyer1} />} name='passwordconfig'  onBlur={formik.handleBlur} style={{margin:'20px'}} variant='outlined' color='primary' value={formik.values.passwordconfig} onChange={formik.handleChange} />  \r\n                                 {formik.touched.passwordconfig && formik.errors.passwordconfig ? <Alert severity=\"error\">{formik.errors.passwordconfig}</Alert>:''}\r\n                            </Grid>\r\n                            \r\n                        <br />\r\n                        <Grid item xs={2}>\r\n                            <Button disabled={button} variant='outlined' color='primary' type='submit'>Sign up</Button>\r\n                        </Grid>\r\n\r\n                        \r\n                        \r\n                  </Grid>          \r\n               </form>\r\n               <h5> <Link to=\"/signin\" >already have an account </Link></h5>\r\n               \r\n                    \r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;","import React, { useState } from 'react';\r\nimport { Grid , Button ,Card ,Paper ,TextField, CardMedia, CardContent ,} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport blue from \"../image/blue.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {useAuth} from \"../Config/AuthProvider\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles({\r\n    center:{\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n    }\r\n})\r\nfunction Forgotpassword(props) {\r\n    const classes =useStyles();\r\n    const {passwordreset} =useAuth();\r\n    const [message,setMessage] =useState('');\r\n    const [error,setError] =useState('');\r\n    const [button,setButton] =useState(false);\r\n    const {currentUser} =useAuth();\r\n    const formik =useFormik({\r\n        initialValues:{\r\n        email:'',\r\n        },\r\n        validationSchema:Yup.object({\r\n            email:Yup.string().email('invalid email type').required('email is required'),\r\n        }),\r\n\r\n       onSubmit :async (values)=>{\r\n           try{\r\n              setMessage('');\r\n              setError('');\r\n              setButton(true);\r\n              await passwordreset(formik.values.email);\r\n              setMessage('check mail for email reset link')\r\n           }catch{\r\n               setError('failed to reset email')\r\n           }\r\n           setButton(false);\r\n       }\r\n    })\r\n    return (\r\n        <div className={classes.center}>\r\n            \r\n            <Card>\r\n            \r\n               <form onSubmit={formik.handleSubmit}>\r\n                   {error?<Alert severity='error'>{error}</Alert> :''}\r\n                   {message ?<Alert severity=\"info\">{message}</Alert> : ''}\r\n               <Grid container>   \r\n                    <Grid item xs={2}> <label style={{fontSize:'18px'}}> Email:</label> </Grid>\r\n                            <Grid item xs={10}>\r\n                                <TextField label='email' name='email' onBlur={formik.handleBlur} style={{margin:'20px'}} variant='outlined' color='primary' value={formik.values.email} onChange={formik.handleChange} />\r\n                                {formik.touched.email && formik.errors.email ?<Alert severity=\"error\">{formik.errors.email}</Alert>:''}\r\n                            </Grid>\r\n                            \r\n                        <br />\r\n                        <Grid item xs={2}>\r\n                            <Button disabled={button} variant='outlined' color='primary' type='submit'>submit</Button>\r\n                        </Grid>\r\n                  </Grid>          \r\n               </form>\r\n               <Link to=\"/signin\">Sign in</Link>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Forgotpassword;","import React,{useState ,useEffect} from 'react';\r\nimport { Grid , Button ,Card ,Paper ,TextField, CardMedia, CardContent ,} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport blue from \"../image/blue.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {useAuth} from \"../Config/AuthProvider\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    center:{\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n    }\r\n})\r\nfunction Signin(props) {\r\n    const classes =useStyles();\r\n    const history =useHistory();\r\n    const {login,currentUser } =useAuth();\r\n    const [error,setError]=useState('');\r\n    const [button,setButton] = useState(false);\r\n    const [eyes,setEyes] =useState(true);\r\n\r\n    const eyer =(e) =>{\r\n        setEyes(!eyes);\r\n    }\r\n    \r\n    const formik =useFormik({\r\n        initialValues:{\r\n        email:'',\r\n        password:'',\r\n        },\r\n        validationSchema:Yup.object({\r\n            email:Yup.string().email('invalid email type').required('email is required'),\r\n            password:Yup.string().required('password is required'),\r\n           \r\n        }),\r\n\r\n       onSubmit :async (values)=>{\r\n           try{\r\n               setError('');\r\n               setButton(true);\r\n               await login(formik.values.email,formik.values.password);\r\n               history.push('/');\r\n           }catch{\r\n               setError('failed to login');\r\n\r\n           }\r\n           setButton(false);\r\n       }\r\n    })\r\n    return (\r\n        <div className={classes.center}>\r\n            <Card style={{width:'500px'}}>\r\n            \r\n               <form onSubmit={formik.handleSubmit}>\r\n                   <bold>Log In</bold>\r\n                   {error ?<Alert severity=\"error\">{error} </Alert> :''}\r\n               <Grid container>   \r\n                <Grid item xs={2}> <label style={{fontSize:'18px'}}> Email:</label> </Grid>\r\n                            <Grid item xs={10}>\r\n                                <Input label='email' name='email' onBlur={formik.handleBlur} style={{margin:'20px'}} variant='outlined' color='primary' value={formik.values.email} onChange={formik.handleChange} />\r\n                                {formik.touched.email && formik.errors.email ?<Alert severity=\"error\">{formik.errors.email}</Alert>:''}\r\n                            </Grid>\r\n                        \r\n                        <Grid item xs={2}> <label style={{fontSize:'18px'}}> password: </label></Grid>\r\n                            <Grid item xs={10}>\r\n                                    <Input label='password' type={eyes ? 'password' :'text'} endAdornment={<InputAdornment>{eyes ? <VisibilityIcon onClick={eyer}/> : <VisibilityOffIcon onClick={eyer}/>}</InputAdornment>} name='password' onBlur={formik.handleBlur} variant='outlined' style={{margin:'20px'}} color='primary' value={formik.values.password} onChange={formik.handleChange} />\r\n                                     {formik.touched.password && formik.errors.password ? <Alert severity=\"error\">{formik.errors.password}</Alert>:''}\r\n                                </Grid>\r\n                         \r\n                       \r\n                        <Grid item xs={2}>\r\n                            <Button disabled={button} size='small' variant='outlined' color='primary' type='submit'>Log In</Button>\r\n                        </Grid>\r\n                        \r\n                        </Grid>          \r\n               </form>\r\n               <h5>  <Link to=\"/signup\">Need an account </Link> </h5>\r\n               <h5> <Link to=\"/forgot-password\">Forgotten password </Link></h5> \r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\nimport \"./App.css\";\r\n\r\n\r\nfunction Animation(props) {\r\n    return (\r\n        <p className='p'>hello world </p>\r\n        /*<iframe style={{margin:0}} src='https://my.spline.design/mychatspline-f15657bef74cbc2058e6ff3858da5117/' frameborder='0' width='100%' height='500vh'></iframe>*/\r\n    );\r\n}\r\n\r\nexport default Animation;\r\n\r\n","import React from 'react';\r\nimport { AuthProvider } from \"../Config/AuthProvider\";\r\nimport SimpleTabs from \"./SimpleTabs\";\r\nimport {BrowserRouter as Router ,Route ,Switch } from \"react-router-dom\";\r\nimport Signin from \"./Signin\";\r\nimport Signup from \"./Signup\";\r\nimport Forgotpassword from \"./Forgotpassword\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport Signout from \"./Signout\";\r\nimport Upload from './Upload';\r\nimport Animation from \"./Animation\";\r\n\r\nfunction MainRoute(props) {\r\n\r\n    return (\r\n        <>\r\n        <Router>\r\n            <AuthProvider>\r\n                <Switch>\r\n                   <Route exact path=\"/\" component={Animation}/>\r\n                   <Route path=\"/signin\" component={Signin} />\r\n                   <Route  path=\"/signup\" component={Signup} />\r\n                   <Route  path=\"/signout\" component={Signout} />\r\n                   <Route  path=\"/forgot-password\" component={Forgotpassword} />\r\n                </Switch>\r\n            </AuthProvider>\r\n        </Router>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default MainRoute;","import React from 'react';\nimport ReactDom from \"react-dom\";\nimport SimpleTabs from \"./Chat-up/SimpleTabs\";\n//import Contain from \"./whatsapp/contain\";\nimport Signup from \"./Chat-up/Signup\";\nimport Forgotpassword from \"./Chat-up/Forgotpassword\";\nimport  MainRoute  from \"./Chat-up/MainRoute\";\n//import Contain from \"./whatsapp/Contain\";\nReactDom.render(<MainRoute />,\n    document.getElementById('root'))\n"],"sourceRoot":""}